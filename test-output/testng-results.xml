<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-05-23T11:04:58 IST" name="Suite" finished-at="2022-05-23T11:06:16 IST" duration-ms="78153">
    <groups>
    </groups>
    <test started-at="2022-05-23T11:04:58 IST" name="Test1" finished-at="2022-05-23T11:05:09 IST" duration-ms="10907">
      <class name="Testcases.TC1giftcard">
        <test-method is-config="true" signature="btest()[pri:0, instance:Testcases.TC1giftcard@43df23d3]" started-at="2022-05-23T11:04:58 IST" name="btest" finished-at="2022-05-23T11:05:04 IST" duration-ms="5786" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- btest -->
        <test-method is-config="true" signature="bmethod(java.lang.reflect.Method)[pri:0, instance:Testcases.TC1giftcard@43df23d3]" started-at="2022-05-23T11:05:04 IST" name="bmethod" finished-at="2022-05-23T11:05:04 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Testcases.TC1giftcard.giftCard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmethod -->
        <test-method signature="giftCard()[pri:0, instance:Testcases.TC1giftcard@43df23d3]" started-at="2022-05-23T11:05:04 IST" name="giftCard" finished-at="2022-05-23T11:05:06 IST" duration-ms="2697" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- giftCard -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Testcases.TC1giftcard@43df23d3]" started-at="2022-05-23T11:05:06 IST" name="getResult" finished-at="2022-05-23T11:05:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=giftCard status=SUCCESS method=TC1giftcard.giftCard()[pri:0, instance:Testcases.TC1giftcard@43df23d3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="aftest()[pri:0, instance:Testcases.TC1giftcard@43df23d3]" started-at="2022-05-23T11:05:06 IST" name="aftest" finished-at="2022-05-23T11:05:09 IST" duration-ms="2364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftest -->
      </class> <!-- Testcases.TC1giftcard -->
    </test> <!-- Test1 -->
    <test started-at="2022-05-23T11:05:09 IST" name="Test2" finished-at="2022-05-23T11:05:17 IST" duration-ms="8270">
      <class name="Testcases.TC2gostore">
        <test-method is-config="true" signature="btest()[pri:0, instance:Testcases.TC2gostore@3cce5371]" started-at="2022-05-23T11:05:09 IST" name="btest" finished-at="2022-05-23T11:05:11 IST" duration-ms="2403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- btest -->
        <test-method is-config="true" signature="bmethod(java.lang.reflect.Method)[pri:0, instance:Testcases.TC2gostore@3cce5371]" started-at="2022-05-23T11:05:11 IST" name="bmethod" finished-at="2022-05-23T11:05:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Testcases.TC2gostore.stores()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmethod -->
        <test-method signature="stores()[pri:0, instance:Testcases.TC2gostore@3cce5371]" started-at="2022-05-23T11:05:11 IST" name="stores" finished-at="2022-05-23T11:05:15 IST" duration-ms="3596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stores -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Testcases.TC2gostore@3cce5371]" started-at="2022-05-23T11:05:15 IST" name="getResult" finished-at="2022-05-23T11:05:15 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=stores status=SUCCESS method=TC2gostore.stores()[pri:0, instance:Testcases.TC2gostore@3cce5371] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="aftest()[pri:0, instance:Testcases.TC2gostore@3cce5371]" started-at="2022-05-23T11:05:15 IST" name="aftest" finished-at="2022-05-23T11:05:17 IST" duration-ms="2263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftest -->
      </class> <!-- Testcases.TC2gostore -->
    </test> <!-- Test2 -->
    <test started-at="2022-05-23T11:05:17 IST" name="Test3" finished-at="2022-05-23T11:05:22 IST" duration-ms="4934">
      <class name="Testcases.TC3loginpage">
        <test-method is-config="true" signature="btest()[pri:0, instance:Testcases.TC3loginpage@48e1f6c7]" started-at="2022-05-23T11:05:17 IST" name="btest" finished-at="2022-05-23T11:05:20 IST" duration-ms="3395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- btest -->
        <test-method is-config="true" signature="bmethod(java.lang.reflect.Method)[pri:0, instance:Testcases.TC3loginpage@48e1f6c7]" started-at="2022-05-23T11:05:20 IST" name="bmethod" finished-at="2022-05-23T11:05:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Testcases.TC3loginpage.loginpage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmethod -->
        <test-method signature="loginpage()[pri:0, instance:Testcases.TC3loginpage@48e1f6c7]" started-at="2022-05-23T11:05:20 IST" name="loginpage" finished-at="2022-05-23T11:05:22 IST" duration-ms="1120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginpage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Testcases.TC3loginpage@48e1f6c7]" started-at="2022-05-23T11:05:22 IST" name="getResult" finished-at="2022-05-23T11:05:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginpage status=SUCCESS method=TC3loginpage.loginpage()[pri:0, instance:Testcases.TC3loginpage@48e1f6c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="aftest()[pri:0, instance:Testcases.TC3loginpage@48e1f6c7]" started-at="2022-05-23T11:05:22 IST" name="aftest" finished-at="2022-05-23T11:05:22 IST" duration-ms="379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftest -->
      </class> <!-- Testcases.TC3loginpage -->
    </test> <!-- Test3 -->
    <test started-at="2022-05-23T11:05:22 IST" name="Test4" finished-at="2022-05-23T11:05:30 IST" duration-ms="8411">
      <class name="Testcases.TC4mattresses">
        <test-method is-config="true" signature="btest()[pri:0, instance:Testcases.TC4mattresses@72c8e7b]" started-at="2022-05-23T11:05:22 IST" name="btest" finished-at="2022-05-23T11:05:25 IST" duration-ms="2775" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- btest -->
        <test-method signature="Mattresses()[pri:0, instance:Testcases.TC4mattresses@72c8e7b]" started-at="2022-05-23T11:05:25 IST" name="Mattresses" finished-at="2022-05-23T11:05:28 IST" duration-ms="3517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mattresses -->
        <test-method is-config="true" signature="bmethod(java.lang.reflect.Method)[pri:0, instance:Testcases.TC4mattresses@72c8e7b]" started-at="2022-05-23T11:05:25 IST" name="bmethod" finished-at="2022-05-23T11:05:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Testcases.TC4mattresses.Mattresses()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmethod -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Testcases.TC4mattresses@72c8e7b]" started-at="2022-05-23T11:05:28 IST" name="getResult" finished-at="2022-05-23T11:05:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Mattresses status=SUCCESS method=TC4mattresses.Mattresses()[pri:0, instance:Testcases.TC4mattresses@72c8e7b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="aftest()[pri:0, instance:Testcases.TC4mattresses@72c8e7b]" started-at="2022-05-23T11:05:28 IST" name="aftest" finished-at="2022-05-23T11:05:30 IST" duration-ms="2109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftest -->
      </class> <!-- Testcases.TC4mattresses -->
    </test> <!-- Test4 -->
    <test started-at="2022-05-23T11:05:30 IST" name="Test5" finished-at="2022-05-23T11:05:38 IST" duration-ms="7916">
      <class name="Testcases.TC5trackorder">
        <test-method is-config="true" signature="btest()[pri:0, instance:Testcases.TC5trackorder@57bc27f5]" started-at="2022-05-23T11:05:30 IST" name="btest" finished-at="2022-05-23T11:05:34 IST" duration-ms="3730" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- btest -->
        <test-method is-config="true" signature="bmethod(java.lang.reflect.Method)[pri:0, instance:Testcases.TC5trackorder@57bc27f5]" started-at="2022-05-23T11:05:34 IST" name="bmethod" finished-at="2022-05-23T11:05:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Testcases.TC5trackorder.trackorder()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmethod -->
        <test-method signature="trackorder()[pri:0, instance:Testcases.TC5trackorder@57bc27f5]" started-at="2022-05-23T11:05:34 IST" name="trackorder" finished-at="2022-05-23T11:05:36 IST" duration-ms="2071" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trackorder -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Testcases.TC5trackorder@57bc27f5]" started-at="2022-05-23T11:05:36 IST" name="getResult" finished-at="2022-05-23T11:05:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=trackorder status=SUCCESS method=TC5trackorder.trackorder()[pri:0, instance:Testcases.TC5trackorder@57bc27f5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="aftest()[pri:0, instance:Testcases.TC5trackorder@57bc27f5]" started-at="2022-05-23T11:05:36 IST" name="aftest" finished-at="2022-05-23T11:05:38 IST" duration-ms="2111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftest -->
      </class> <!-- Testcases.TC5trackorder -->
    </test> <!-- Test5 -->
    <test started-at="2022-05-23T11:05:38 IST" name="Test6" finished-at="2022-05-23T11:05:43 IST" duration-ms="4856">
      <class name="Testcases.TC6search">
        <test-method is-config="true" signature="btest()[pri:0, instance:Testcases.TC6search@15888343]" started-at="2022-05-23T11:05:38 IST" name="btest" finished-at="2022-05-23T11:05:41 IST" duration-ms="2364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- btest -->
        <test-method is-config="true" signature="bmethod(java.lang.reflect.Method)[pri:0, instance:Testcases.TC6search@15888343]" started-at="2022-05-23T11:05:41 IST" name="bmethod" finished-at="2022-05-23T11:05:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Testcases.TC6search.search()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmethod -->
        <test-method signature="search()[pri:0, instance:Testcases.TC6search@15888343]" started-at="2022-05-23T11:05:41 IST" name="search" finished-at="2022-05-23T11:05:43 IST" duration-ms="2141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- search -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Testcases.TC6search@15888343]" started-at="2022-05-23T11:05:43 IST" name="getResult" finished-at="2022-05-23T11:05:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=search status=SUCCESS method=TC6search.search()[pri:0, instance:Testcases.TC6search@15888343] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="aftest()[pri:0, instance:Testcases.TC6search@15888343]" started-at="2022-05-23T11:05:43 IST" name="aftest" finished-at="2022-05-23T11:05:43 IST" duration-ms="342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftest -->
      </class> <!-- Testcases.TC6search -->
    </test> <!-- Test6 -->
    <test started-at="2022-05-23T11:05:43 IST" name="Test7" finished-at="2022-05-23T11:05:48 IST" duration-ms="4512">
      <class name="Testcases.TC7help">
        <test-method is-config="true" signature="btest()[pri:0, instance:Testcases.TC7help@333d4a8c]" started-at="2022-05-23T11:05:43 IST" name="btest" finished-at="2022-05-23T11:05:45 IST" duration-ms="2252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- btest -->
        <test-method signature="Help1()[pri:0, instance:Testcases.TC7help@333d4a8c]" started-at="2022-05-23T11:05:45 IST" name="Help1" finished-at="2022-05-23T11:05:48 IST" duration-ms="2063" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Help1 -->
        <test-method is-config="true" signature="bmethod(java.lang.reflect.Method)[pri:0, instance:Testcases.TC7help@333d4a8c]" started-at="2022-05-23T11:05:45 IST" name="bmethod" finished-at="2022-05-23T11:05:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Testcases.TC7help.Help1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmethod -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Testcases.TC7help@333d4a8c]" started-at="2022-05-23T11:05:48 IST" name="getResult" finished-at="2022-05-23T11:05:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Help1 status=SUCCESS method=TC7help.Help1()[pri:0, instance:Testcases.TC7help@333d4a8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="aftest()[pri:0, instance:Testcases.TC7help@333d4a8c]" started-at="2022-05-23T11:05:48 IST" name="aftest" finished-at="2022-05-23T11:05:48 IST" duration-ms="184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftest -->
      </class> <!-- Testcases.TC7help -->
    </test> <!-- Test7 -->
    <test started-at="2022-05-23T11:05:48 IST" name="Test8" finished-at="2022-05-23T11:06:04 IST" duration-ms="16224">
      <class name="Testcases.TC8cutomerStory">
        <test-method is-config="true" signature="btest()[pri:0, instance:Testcases.TC8cutomerStory@491b9b8]" started-at="2022-05-23T11:05:48 IST" name="btest" finished-at="2022-05-23T11:05:50 IST" duration-ms="2641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- btest -->
        <test-method is-config="true" signature="bmethod(java.lang.reflect.Method)[pri:0, instance:Testcases.TC8cutomerStory@491b9b8]" started-at="2022-05-23T11:05:50 IST" name="bmethod" finished-at="2022-05-23T11:05:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Testcases.TC8cutomerStory.CustomerStory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmethod -->
        <test-method signature="CustomerStory()[pri:0, instance:Testcases.TC8cutomerStory@491b9b8]" started-at="2022-05-23T11:05:50 IST" name="CustomerStory" finished-at="2022-05-23T11:06:01 IST" duration-ms="11108" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="content"]/h1"}
  (Session info: chrome=101.0.4951.67)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MINDC1D196', ip: '172.16.44.197', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 101.0.4951.67, chrome: {chromedriverVersion: 101.0.4951.41 (93c720db8323..., userDataDir: C:\Users\MINDSD~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:50302}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 24d8f1cc1c854741779c23f08ca38084
*** Element info: {Using=xpath, value=//*[@id="content"]/h1}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="content"]/h1"}
  (Session info: chrome=101.0.4951.67)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MINDC1D196', ip: '172.16.44.197', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 101.0.4951.67, chrome: {chromedriverVersion: 101.0.4951.41 (93c720db8323..., userDataDir: C:\Users\MINDSD~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:50302}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 24d8f1cc1c854741779c23f08ca38084
*** Element info: {Using=xpath, value=//*[@id="content"]/h1}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy18.getText(Unknown Source)
at Testcases.TC8cutomerStory.CustomerStory(TC8cutomerStory.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CustomerStory -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Testcases.TC8cutomerStory@491b9b8]" started-at="2022-05-23T11:06:01 IST" name="getResult" finished-at="2022-05-23T11:06:02 IST" duration-ms="188" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CustomerStory status=FAILURE method=TC8cutomerStory.CustomerStory()[pri:0, instance:Testcases.TC8cutomerStory@491b9b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="aftest()[pri:0, instance:Testcases.TC8cutomerStory@491b9b8]" started-at="2022-05-23T11:06:02 IST" name="aftest" finished-at="2022-05-23T11:06:04 IST" duration-ms="2284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftest -->
      </class> <!-- Testcases.TC8cutomerStory -->
    </test> <!-- Test8 -->
    <test started-at="2022-05-23T11:06:04 IST" name="Test9" finished-at="2022-05-23T11:06:10 IST" duration-ms="5820">
      <class name="Testcases.TC9address">
        <test-method is-config="true" signature="btest()[pri:0, instance:Testcases.TC9address@16150369]" started-at="2022-05-23T11:06:04 IST" name="btest" finished-at="2022-05-23T11:06:07 IST" duration-ms="3369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- btest -->
        <test-method signature="Address1()[pri:0, instance:Testcases.TC9address@16150369]" started-at="2022-05-23T11:06:07 IST" name="Address1" finished-at="2022-05-23T11:06:08 IST" duration-ms="211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Address1 -->
        <test-method is-config="true" signature="bmethod(java.lang.reflect.Method)[pri:0, instance:Testcases.TC9address@16150369]" started-at="2022-05-23T11:06:07 IST" name="bmethod" finished-at="2022-05-23T11:06:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Testcases.TC9address.Address1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmethod -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Testcases.TC9address@16150369]" started-at="2022-05-23T11:06:08 IST" name="getResult" finished-at="2022-05-23T11:06:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Address1 status=SUCCESS method=TC9address.Address1()[pri:0, instance:Testcases.TC9address@16150369] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="aftest()[pri:0, instance:Testcases.TC9address@16150369]" started-at="2022-05-23T11:06:08 IST" name="aftest" finished-at="2022-05-23T11:06:10 IST" duration-ms="2237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftest -->
      </class> <!-- Testcases.TC9address -->
    </test> <!-- Test9 -->
    <test started-at="2022-05-23T11:06:10 IST" name="Test10" finished-at="2022-05-23T11:06:16 IST" duration-ms="6202">
      <class name="Testcases.TC10Aboutus">
        <test-method is-config="true" signature="beforesuit()[pri:0, instance:Testcases.TC10Aboutus@1b1cfb87]" started-at="2022-05-23T11:04:58 IST" name="beforesuit" finished-at="2022-05-23T11:04:58 IST" duration-ms="278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesuit -->
        <test-method is-config="true" signature="btest()[pri:0, instance:Testcases.TC10Aboutus@1b1cfb87]" started-at="2022-05-23T11:06:10 IST" name="btest" finished-at="2022-05-23T11:06:12 IST" duration-ms="2646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- btest -->
        <test-method is-config="true" signature="bmethod(java.lang.reflect.Method)[pri:0, instance:Testcases.TC10Aboutus@1b1cfb87]" started-at="2022-05-23T11:06:12 IST" name="bmethod" finished-at="2022-05-23T11:06:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Testcases.TC10Aboutus.About()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmethod -->
        <test-method signature="About()[pri:0, instance:Testcases.TC10Aboutus@1b1cfb87]" started-at="2022-05-23T11:06:12 IST" name="About" finished-at="2022-05-23T11:06:14 IST" duration-ms="1471" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- About -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Testcases.TC10Aboutus@1b1cfb87]" started-at="2022-05-23T11:06:14 IST" name="getResult" finished-at="2022-05-23T11:06:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=About status=SUCCESS method=TC10Aboutus.About()[pri:0, instance:Testcases.TC10Aboutus@1b1cfb87] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="aftest()[pri:0, instance:Testcases.TC10Aboutus@1b1cfb87]" started-at="2022-05-23T11:06:14 IST" name="aftest" finished-at="2022-05-23T11:06:16 IST" duration-ms="2076" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftest -->
        <test-method is-config="true" signature="aftersuit()[pri:0, instance:Testcases.TC10Aboutus@1b1cfb87]" started-at="2022-05-23T11:06:16 IST" name="aftersuit" finished-at="2022-05-23T11:06:16 IST" duration-ms="385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuit -->
      </class> <!-- Testcases.TC10Aboutus -->
    </test> <!-- Test10 -->
  </suite> <!-- Suite -->
</testng-results>
